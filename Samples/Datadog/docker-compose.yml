version: '3.8'

services:
  # Datadog Agent
  datadog-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: datadog-agent
    environment:
      # Required: Set your Datadog API key here
      - DD_API_KEY=${DD_API_KEY:-your-api-key-here}
      
      # APM Configuration
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_APM_RECEIVER_PORT=8126
      
      # Logs Configuration  
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      
      # Metrics Configuration
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_PORT=8125
      
      # Agent Configuration
      - DD_HOSTNAME=datadog-agent
      - DD_SITE=${DD_SITE:-datadoghq.com}
      - DD_ENV=development
      - DD_SERVICE=observability-sdk-4d
      - DD_VERSION=1.0.0
      
      # Enable log collection from containers
      - DD_CONTAINER_EXCLUDE="name:datadog-agent"
      
    ports:
      # APM traces
      - "8126:8126"
      # DogStatsD metrics
      - "8125:8125/udp"
      # Agent API
      - "5002:5002"
      
    volumes:
      # Docker socket for container discovery
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
      
    networks:
      - datadog-network
      
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "agent", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: StatsD proxy for testing metrics
  statsd-proxy:
    image: prom/statsd-exporter:latest
    container_name: statsd-proxy
    ports:
      - "9102:9102"  # Metrics endpoint
      - "9125:9125/udp"  # StatsD receiver
    command:
      - '--statsd.listen-udp=:9125'
      - '--web.listen-address=:9102'
    networks:
      - datadog-network
    profiles:
      - testing

volumes:
  datadog_data:
    driver: local

networks:
  datadog-network:
    driver: bridge